### NUMBERS
# Int, float, complex

x = 1
y = 1.9
z = 7.6j

# Float, or "floating point number" is a number, positive or negative, containing one or more decimals.

a = -10.33
print(type(a))

# Float can also be scientific numbers with an "e" to indicate the power of 10.

x = 250**250
print(x)
print(type(x))

"""ouptup x

<class 'int'>

"""

"""
Python can represent almost any number, there are limit cases where we can find ourselves with an exception like the one we show below.
the output r = overflow, 
r = (5e200**2)

A curious case is that if we try to represent an even larger number, we will find the following rather than with one exception.
s = (2e2000**2)
"""


#        r = (5e200**2)
#        print(r) # result overflow

s = (2e2000**2)
print(s) # result inf